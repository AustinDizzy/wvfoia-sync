on:
    workflow_dispatch:
    schedule:
        # Run everyday at 4:00 AM Eastern Time (9:00 AM UTC)
      - cron: '0 9 * * *'

jobs:
    sync:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                cache: 'pip'
            - name: Install dependencies
              run: pip3 install -r requirements.txt
            - name: Download database
              run: curl -o flights.db -sL https://github.com/AustinDizzy/wvfoia-sync/releases/latest/download/wvfoia.db
            - name: Store initial latest ID
              id: initial_id
              run: echo "initial_id=$(sqlite3 wvfoia.db 'SELECT id FROM entries ORDER BY id DESC LIMIT 1;')" >> $GITHUB_ENV
            - name: Run sync in crawl mode
              run: python3 main.py --db wvfoia.db --mode crawl
            - name: Check for new entries
              run: |
                new_id=$(sqlite3 wvfoia.db 'SELECT id FROM entries ORDER BY id DESC LIMIT 1;')
                if [ "$new_id" -eq "${{ env.initial_id }}" ]; then
                  echo "No new data. Exiting."
                  exit 0
                fi
            - name: Update LATEST_ENTRY_ID and README
              run: |
                nl="LATEST_ENTRY_ID = $new_id"
                sed -i "s/LATEST_ENTRY_ID = [0-9]\+/$(nl)/" main.py
                nr="Latest Release ($(date +'%Y.%m.%d'))"
                sed -i "s/Latest Release ([0-9]\+\.[0-9]\+\.[0-9]\+)/$(nr)/" README.md
            - name: Commit and push changes
              run: |
                git add main.py README.md
                git commit -m "Update LATEST_ENTRY_ID for $(date +%Y-%m-%d)"
                git push
            - name: Create new release
              run: |
                gh release create "v1.0.$(date +%Y-%m-%d)" --title "v1.0.$(date +%Y-%m-%d)" --notes "New release for $(date +%Y-%m-%d)" --target master wvfoia.db
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}