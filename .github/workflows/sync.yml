on:
  workflow_dispatch:
  schedule:
    # Run everyday at 4:00 AM Eastern Time (9:00 AM UTC)
    - cron: '0 9 * * *'

jobs:
  sync:
    runs-on: ubuntu-latest
    outputs:
      new_data_found: ${{ env.new_data_found }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
      - name: Install dependencies
        run: pip3 install -r requirements.txt
      - name: Download database
        run: curl -o wvfoia.db -sL https://github.com/AustinDizzy/wvfoia-sync/releases/latest/download/wvfoia.db
      - name: Store initial latest ID
        id: initial_id
        run: echo "initial_id=$(sqlite3 wvfoia.db 'SELECT id FROM entries ORDER BY id DESC LIMIT 1;')" >> $GITHUB_ENV
      - name: Run sync in crawl mode
        run: python3 main.py --db wvfoia.db --mode crawl
      - name: Check for new entries
        id: check_new_entries
        run: |
          new_id=$(sqlite3 wvfoia.db 'SELECT id FROM entries ORDER BY id DESC LIMIT 1;')
          echo "new_data_found=false" >> $GITHUB_ENV
          if [ "$new_id" -ne "${{ env.initial_id }}" ]; then
            echo "new_data_found=true" >> $GITHUB_ENV
          fi
      - name: Upload database as artifact
        if: env.new_data_found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: wvfoia-db
          path: wvfoia.db

  update_and_release:
    needs: sync
    if: needs.sync.outputs.new_data_found == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download database artifact
        uses: actions/download-artifact@v4
        with:
          name: wvfoia-db
      - name: Update LATEST_ENTRY_ID and README
        run: |
          new_id=$(sqlite3 wvfoia.db 'SELECT id FROM entries ORDER BY id DESC LIMIT 1;')
          sed -i "s/LATEST_ENTRY_ID = [0-9]\+/LATEST_ENTRY_ID = $new_id/" main.py
          today=$(date +'%Y-%m-%d')
          sed -i "s/Latest Release (v1.0.[0-9]\+\-[0-9]\+\-[0-9]\+)/Latest Release (v1.0.$today)/" README.md
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add main.py README.md
          git commit -m "Update with new entries for $today"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create new release
        run: |
          gh release create "v1.0.$(date +%Y-%m-%d)" --title "v1.0.$(date +%Y-%m-%d)" --notes "New release for $(date +%Y-%m-%d)" --target master wvfoia.db
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
